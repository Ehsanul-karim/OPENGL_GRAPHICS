#pragma once
//
//  bottle.h
//  OpenGL Bottle Object
//

#ifndef GRASS_FIELD
#define GRASS_FIELD

#include <glad/glad.h>
#include <vector>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
#include "shader.h"

class GRASS_Field {
public:
    // Material properties
    glm::vec3 ambient;
    glm::vec3 diffuse;
    glm::vec3 specular;

    // Texture properties
    unsigned int diffuseMap;
    unsigned int specularMap;
    float shininess;

    // Constructor with default values
    GRASS_Field()
        : ambient(glm::vec3(0.2f)), diffuse(glm::vec3(0.5f)), specular(glm::vec3(1.0f)), shininess(32.0f),
        diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    GRASS_Field(glm::vec3 amb, glm::vec3 diff, glm::vec3 spec, float shiny)
        : ambient(amb), diffuse(diff), specular(spec), shininess(shiny), diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    GRASS_Field(unsigned int dMap, unsigned int sMap, float shiny)
        : diffuseMap(dMap), specularMap(sMap), shininess(shiny), ambient(glm::vec3(0.0f)), diffuse(glm::vec3(0.0f)), specular(glm::vec3(0.0f)) {
        setUpVertexData();
    }

    ~GRASS_Field() {
        glDeleteVertexArrays(1, &VAO);
        glDeleteBuffers(1, &VBO);
        glDeleteBuffers(1, &EBO);
    }

    void drawWithMaterial(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();
        shader.setVec3("material.ambient", ambient);
        shader.setVec3("material.diffuse", diffuse);
        shader.setVec3("material.specular", specular);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

    void drawWithTexture(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();

        shader.setInt("material.diffuse", 0);
        shader.setInt("material.specular", 1);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glActiveTexture(GL_TEXTURE0);
        glBindTexture(GL_TEXTURE_2D, diffuseMap);
        glActiveTexture(GL_TEXTURE1);
        glBindTexture(GL_TEXTURE_2D, specularMap);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

private:
    unsigned int VAO, VBO, EBO;
    std::vector<float> vertices;
    std::vector<unsigned int> indices;

    void setUpVertexData() {
        // Define the vertex data (positions, normals, texture coordinates)
        vertices = {
                1.371189f, -1.575834f, 0.034285f, -0.0000f, -1.0000f, -0.0000f, 1.1856f, -0.2879f,  // Vertex 1
                1.371189f, -1.575834f, 0.084285f, 0.0000f, 1.0000f, 0.0000f, 1.1856f, -0.2879f,  // Vertex 2
                1.541189f, -1.575834f, 0.084285f, -1.0000f, 0.0000f, -0.0000f, 1.2706f, -0.2879f,  // Vertex 3
                1.541189f, -1.575834f, 0.034286f, 1.0000f, -0.0000f, 0.0000f, 1.2706f, -0.2879f,  // Vertex 4
                1.371191f, 1.574168f, 0.034287f, 0.0000f, 0.0000f, -1.0000f, 1.1856f, 1.2871f,  // Vertex 5
                1.541191f, 1.574167f, 0.034287f, -0.0000f, -0.0000f, 1.0000f, 1.2706f, 1.2871f,  // Vertex 6
                1.541191f, 1.574167f, 0.084287f, 1.0000f, -0.0000f, 0.0000f, 1.2706f, 1.2871f,  // Vertex 7
                1.371191f, 1.574167f, 0.084287f, -1.0000f, 0.0000f, 0.0000f, 1.1856f, 1.2871f,  // Vertex 8
                1.546191f, -1.493334f, -0.016548f, -0.0000f, -1.0000f, -0.0000f, 1.2731f, -0.2467f,  // Vertex 9
                1.546191f, -1.493334f, 0.033452f, 0.0000f, 1.0000f, 0.0000f, 1.2731f, -0.2467f,  // Vertex 10
                1.546191f, -1.323334f, 0.033452f, 0.0000f, 0.0000f, -1.0000f, 1.2731f, -0.1617f,  // Vertex 11
                1.546191f, -1.323334f, -0.016548f, -0.0000f, -0.0000f, 1.0000f, 1.2731f, -0.1617f,  // Vertex 12
                -1.543811f, -1.493333f, -0.016549f, 1.0000f, -0.0000f, 0.0000f, -0.2719f, -0.2467f,  // Vertex 13
                -1.543811f, -1.323333f, -0.016549f, -1.0000f, 0.0000f, 0.0000f, -0.2719f, -0.1617f,  // Vertex 14
                -1.543810f, -1.323333f, 0.033451f, -0.0000f, -1.0000f, -0.0000f, -0.2719f, -0.1617f,  // Vertex 15
                -1.543810f, -1.493333f, 0.033451f, 0.0000f, 1.0000f, 0.0000f, -0.2719f, -0.2467f,  // Vertex 16
                1.536191f, 1.076666f, -0.016548f, 0.0000f, 0.0000f, -1.0000f, 1.2681f, 1.0383f,  // Vertex 17
                1.536191f, 1.076666f, 0.033452f, -0.0000f, -0.0000f, 1.0000f, 1.2681f, 1.0383f,  // Vertex 18
                1.536191f, 1.246665f, 0.033452f, -0.0000f, -1.0000f, -0.0000f, 1.2681f, 1.1233f,  // Vertex 19
                1.536191f, 1.246666f, -0.016548f, 0.0000f, 1.0000f, 0.0000f, 1.2681f, 1.1233f,  // Vertex 20
                -1.533811f, 1.076668f, -0.016549f, -1.0000f, 0.0000f, -0.0000f, -0.2669f, 1.0383f,  // Vertex 21
                -1.533811f, 1.246668f, -0.016549f, 1.0000f, -0.0000f, 0.0000f, -0.2669f, 1.1233f,  // Vertex 22
                -1.533810f, 1.246668f, 0.033451f, 0.0000f, 0.0000f, -1.0000f, -0.2669f, 1.1233f,  // Vertex 23
                -1.533810f, 1.076668f, 0.033451f, -0.0000f, -0.0000f, 1.0000f, -0.2669f, 1.0383f,  // Vertex 24
                1.196190f, -1.573334f, -0.076548f, 1.0000f, -0.0000f, 0.0000f, 1.0981f, -0.2867f,  // Vertex 25
                1.196190f, -1.573334f, -0.026548f, -1.0000f, 0.0000f, 0.0000f, 1.0981f, -0.2867f,  // Vertex 26
                1.366190f, -1.573334f, -0.026548f, -0.0000f, -1.0000f, -0.0000f, 1.1831f, -0.2867f,  // Vertex 27
                1.366190f, -1.573334f, -0.076548f, 0.0000f, 1.0000f, 0.0000f, 1.1831f, -0.2867f,  // Vertex 28
                1.196192f, 1.576667f, -0.076547f, 0.0000f, 0.0000f, -1.0000f, 1.0981f, 1.2883f,  // Vertex 29
                1.366192f, 1.576667f, -0.076547f, -0.0000f, -0.0000f, 1.0000f, 1.1831f, 1.2883f,  // Vertex 30
                1.366192f, 1.576666f, -0.026547f, -0.0000f, -1.0000f, -0.0000f, 1.1831f, 1.2883f,  // Vertex 31
                1.196192f, 1.576667f, -0.026547f, 0.0000f, 1.0000f, 0.0000f, 1.0981f, 1.2883f,  // Vertex 32
                1.541190f, -0.285834f, -0.015714f, -1.0000f, 0.0000f, -0.0000f, 1.2706f, 0.3571f,  // Vertex 33
                1.541190f, -0.285834f, 0.034286f, 1.0000f, -0.0000f, 0.0000f, 1.2706f, 0.3571f,  // Vertex 34
                1.541190f, -0.115834f, 0.034286f, 0.0000f, 0.0000f, -1.0000f, 1.2706f, 0.4421f,  // Vertex 35
                1.541190f, -0.115834f, -0.015714f, -0.0000f, -0.0000f, 1.0000f, 1.2706f, 0.4421f,  // Vertex 36
                -1.538812f, -0.285832f, -0.015715f, -0.0000f, -1.0000f, -0.0000f, -0.2694f, 0.3571f,  // Vertex 37
                -1.538811f, -0.115832f, -0.015715f, 0.0000f, 1.0000f, 0.0000f, -0.2694f, 0.4421f,  // Vertex 38
                -1.538811f, -0.115832f, 0.034285f, -1.0000f, 0.0000f, -0.0000f, -0.2694f, 0.4421f,  // Vertex 39
                -1.538811f, -0.285832f, 0.034285f, 1.0000f, -0.0000f, 0.0000f, -0.2694f, 0.3571f,  // Vertex 40
                -0.683809f, -1.543334f, 0.033452f, 0.0000f, 0.0000f, -1.0000f, 0.1581f, -0.2717f,  // Vertex 41
                -0.683809f, -1.543334f, 0.083452f, -0.0000f, -0.0000f, 1.0000f, 0.1581f, -0.2717f,  // Vertex 42
                -0.513809f, -1.543334f, 0.083452f, -0.0000f, -1.0000f, -0.0000f, 0.2431f, -0.2717f,  // Vertex 43
                -0.513809f, -1.543334f, 0.033452f, 0.0000f, 1.0000f, 0.0000f, 0.2431f, -0.2717f,  // Vertex 44
                -0.683808f, 1.606667f, 0.033453f, -1.0000f, 0.0000f, -0.0000f, 0.1581f, 1.3033f,  // Vertex 45
                -0.513808f, 1.606667f, 0.033453f, 1.0000f, -0.0000f, 0.0000f, 0.2431f, 1.3033f,  // Vertex 46
                -0.513808f, 1.606666f, 0.083453f, 0.0000f, 0.0000f, -1.0000f, 0.2431f, 1.3033f,  // Vertex 47
                -0.683808f, 1.606667f, 0.083453f, -0.0000f, -0.0000f, 1.0000f, 0.1581f, 1.3033f,  // Vertex 48
                -0.853809f, -1.543334f, -0.076548f, -0.0000f, -1.0000f, -0.0000f, 0.0731f, -0.2717f,  // Vertex 49
                -0.853809f, -1.543334f, -0.026548f, 0.0000f, 1.0000f, 0.0000f, 0.0731f, -0.2717f,  // Vertex 50
                -0.683809f, -1.543334f, -0.026548f, -1.0000f, 0.0000f, -0.0000f, 0.1581f, -0.2717f,  // Vertex 51
                -0.683809f, -1.543334f, -0.076548f, 1.0000f, -0.0000f, 0.0000f, 0.1581f, -0.2717f,  // Vertex 52
                -0.853808f, 1.606667f, -0.076547f, 0.0000f, 0.0000f, -1.0000f, 0.0731f, 1.3033f,  // Vertex 53
                -0.683808f, 1.606667f, -0.076547f, -0.0000f, -0.0000f, 1.0000f, 0.1581f, 1.3033f,  // Vertex 54
                -0.683808f, 1.606666f, -0.026547f, -0.0000f, -1.0000f, -0.0000f, 0.1581f, 1.3033f,  // Vertex 55
                -0.853808f, 1.606667f, -0.026547f, 0.0000f, 1.0000f, 0.0000f, 0.0731f, 1.3033f,  // Vertex 56
                -1.013811f, -1.543334f, 0.023452f, -1.0000f, 0.0000f, -0.0000f, -0.0069f, -0.2717f,  // Vertex 57
                -1.013811f, -1.543334f, 0.073452f, 1.0000f, -0.0000f, 0.0000f, -0.0069f, -0.2717f,  // Vertex 58
                -0.843811f, -1.543334f, 0.073452f, 0.0000f, 0.0000f, -1.0000f, 0.0781f, -0.2717f,  // Vertex 59
                -0.843811f, -1.543334f, 0.023452f, -0.0000f, -0.0000f, 1.0000f, 0.0781f, -0.2717f,  // Vertex 60
                -1.013810f, 1.606668f, 0.023453f, -0.0000f, -1.0000f, -0.0000f, -0.0069f, 1.3033f,  // Vertex 61
                -0.843810f, 1.606667f, 0.023453f, 0.0000f, 1.0000f, 0.0000f, 0.0781f, 1.3033f,  // Vertex 62
                -0.843810f, 1.606667f, 0.073453f, -1.0000f, 0.0000f, -0.0000f, 0.0781f, 1.3033f,  // Vertex 63
                -1.013810f, 1.606667f, 0.073453f, 1.0000f, -0.0000f, 0.0000f, -0.0069f, 1.3033f,  // Vertex 64
                -1.203811f, -1.543334f, -0.066548f, 0.0000f, 0.0000f, -1.0000f, -0.1019f, -0.2717f,  // Vertex 65
                -1.203811f, -1.543334f, -0.016548f, -0.0000f, -0.0000f, 1.0000f, -0.1019f, -0.2717f,  // Vertex 66
                -1.033811f, -1.543334f, -0.016548f, -0.0000f, -1.0000f, -0.0000f, -0.0169f, -0.2717f,  // Vertex 67
                -1.033811f, -1.543334f, -0.066548f, 0.0000f, 1.0000f, 0.0000f, -0.0169f, -0.2717f,  // Vertex 68
                -1.203810f, 1.606667f, -0.066547f, -1.0000f, 0.0000f, -0.0000f, -0.1019f, 1.3033f,  // Vertex 69
                -1.033810f, 1.606667f, -0.066547f, 1.0000f, -0.0000f, 0.0000f, -0.0169f, 1.3033f,  // Vertex 70
                -1.033810f, 1.606666f, -0.016547f, 0.0000f, 0.0000f, -1.0000f, -0.0169f, 1.3033f,  // Vertex 71
                -1.203810f, 1.606667f, -0.016547f, -0.0000f, -0.0000f, 1.0000f, -0.1019f, 1.3033f,  // Vertex 72
                0.686191f, -1.553334f, 0.033452f, -0.0000f, -1.0000f, -0.0000f, 0.8431f, -0.2767f,  // Vertex 73
                0.686191f, -1.553334f, 0.083452f, 0.0000f, 1.0000f, 0.0000f, 0.8431f, -0.2767f,  // Vertex 74
                0.856190f, -1.553334f, 0.083452f, -1.0000f, 0.0000f, -0.0000f, 0.9281f, -0.2767f,  // Vertex 75
                0.856190f, -1.553334f, 0.033452f, 1.0000f, -0.0000f, 0.0000f, 0.9281f, -0.2767f,  // Vertex 76
                0.686192f, 1.596667f, 0.033453f, 0.0000f, 0.0000f, -1.0000f, 0.8431f, 1.2983f,  // Vertex 77
                0.856192f, 1.596667f, 0.033453f, -0.0000f, -0.0000f, 1.0000f, 0.9281f, 1.2983f,  // Vertex 78
                0.856192f, 1.596666f, 0.083453f, -0.0000f, -1.0000f, -0.0000f, 0.9281f, 1.2983f,  // Vertex 79
                0.686192f, 1.596667f, 0.083453f, 0.0000f, 1.0000f, 0.0000f, 0.8431f, 1.2983f,  // Vertex 80
                0.846191f, -1.553334f, -0.076548f, -1.0000f, 0.0000f, -0.0000f, 0.9231f, -0.2767f,  // Vertex 81
                0.846191f, -1.553334f, -0.026548f, 1.0000f, -0.0000f, 0.0000f, 0.9231f, -0.2767f,  // Vertex 82
                1.016191f, -1.553334f, -0.026548f, 0.0000f, 0.0000f, -1.0000f, 1.0081f, -0.2767f,  // Vertex 83
                1.016191f, -1.553334f, -0.076548f, -0.0000f, -0.0000f, 1.0000f, 1.0081f, -0.2767f,  // Vertex 84
                0.846192f, 1.596667f, -0.076547f, -0.0000f, -1.0000f, -0.0000f, 0.9231f, 1.2983f,  // Vertex 85
                1.016192f, 1.596667f, -0.076547f, 0.0000f, 1.0000f, 0.0000f, 1.0081f, 1.2983f,  // Vertex 86
                1.016192f, 1.596666f, -0.026547f, -1.0000f, 0.0000f, -0.0000f, 1.0081f, 1.2983f,  // Vertex 87
                0.846192f, 1.596667f, -0.026547f, 1.0000f, -0.0000f, 0.0000f, 0.9231f, 1.2983f,  // Vertex 88
                0.346189f, -1.533334f, 0.023452f, 0.0000f, 0.0000f, -1.0000f, 0.6731f, -0.2667f,  // Vertex 89
                0.346189f, -1.533334f, 0.073452f, -0.0000f, -0.0000f, 1.0000f, 0.6731f, -0.2667f,  // Vertex 90
                0.516189f, -1.533334f, 0.073452f, -0.0000f, -1.0000f, -0.0000f, 0.7581f, -0.2667f,  // Vertex 91
                0.516189f, -1.533334f, 0.023452f, 0.0000f, 1.0000f, 0.0000f, 0.7581f, -0.2667f,  // Vertex 92
                0.346190f, 1.616667f, 0.023453f, -1.0000f, 0.0000f, -0.0000f, 0.6731f, 1.3083f,  // Vertex 93
                0.516190f, 1.616667f, 0.023453f, 1.0000f, -0.0000f, 0.0000f, 0.7581f, 1.3083f,  // Vertex 94
                0.516190f, 1.616666f, 0.073453f, 0.0000f, 0.0000f, -1.0000f, 0.7581f, 1.3083f,  // Vertex 95
                0.346190f, 1.616667f, 0.073453f, -0.0000f, -0.0000f, 1.0000f, 0.6731f, 1.3083f,  // Vertex 96
                0.166189f, -1.543334f, -0.086548f, -0.0000f, -1.0000f, -0.0000f, 0.5831f, -0.2717f,  // Vertex 97
                0.166189f, -1.543334f, -0.036548f, 0.0000f, 1.0000f, 0.0000f, 0.5831f, -0.2717f,  // Vertex 98
                0.336189f, -1.543334f, -0.036548f, -1.0000f, 0.0000f, -0.0000f, 0.6681f, -0.2717f,  // Vertex 99
                0.336189f, -1.543334f, -0.086548f, 1.0000f, -0.0000f, 0.0000f, 0.6681f, -0.2717f,  // Vertex 100
                0.166190f, 1.606667f, -0.086547f, 0.0000f, 0.0000f, -1.0000f, 0.5831f, 1.3033f,  // Vertex 101
                0.336191f, 1.606667f, -0.086547f, -0.0000f, -0.0000f, 1.0000f, 0.6681f, 1.3033f,  // Vertex 102
                0.336191f, 1.606666f, -0.036547f, -0.0000f, -1.0000f, -0.0000f, 0.6681f, 1.3033f,  // Vertex 103
                0.166190f, 1.606667f, -0.036547f, 0.0000f, 1.0000f, 0.0000f, 0.5831f, 1.3033f,  // Vertex 104
                1.026189f, -1.553334f, 0.014286f, -1.0000f, 0.0000f, -0.0000f, 1.0131f, -0.2767f,  // Vertex 105
                1.026189f, -1.553334f, 0.064286f, 1.0000f, -0.0000f, 0.0000f, 1.0131f, -0.2767f,  // Vertex 106
                1.196189f, -1.553334f, 0.064286f, 0.0000f, 0.0000f, -1.0000f, 1.0981f, -0.2767f,  // Vertex 107
                1.196189f, -1.553334f, 0.014286f, -0.0000f, -0.0000f, 1.0000f, 1.0981f, -0.2767f,  // Vertex 108
                1.026190f, 1.596667f, 0.014287f, -0.0000f, -1.0000f, -0.0000f, 1.0131f, 1.2983f,  // Vertex 109
                1.196190f, 1.596667f, 0.014287f, 0.0000f, 1.0000f, 0.0000f, 1.0981f, 1.2983f,  // Vertex 110
                1.196190f, 1.596666f, 0.064287f, -1.0000f, 0.0000f, -0.0000f, 1.0981f, 1.2983f,  // Vertex 111
                1.026190f, 1.596667f, 0.064287f, 1.0000f, -0.0000f, 0.0000f, 1.0131f, 1.2983f,  // Vertex 112
                0.506190f, -1.553334f, -0.076548f, 0.0000f, 0.0000f, -1.0000f, 0.7531f, -0.2767f,  // Vertex 113
                0.506190f, -1.553334f, -0.026548f, -0.0000f, -0.0000f, 1.0000f, 0.7531f, -0.2767f,  // Vertex 114
                0.676190f, -1.553334f, -0.026548f, -0.0000f, -1.0000f, -0.0000f, 0.8381f, -0.2767f,  // Vertex 115
                0.676191f, -1.553334f, -0.076548f, 0.0000f, 1.0000f, 0.0000f, 0.8381f, -0.2767f,  // Vertex 116
                0.506192f, 1.596667f, -0.076547f, -1.0000f, 0.0000f, -0.0000f, 0.7531f, 1.2983f,  // Vertex 117
                0.676192f, 1.596667f, -0.076547f, 1.0000f, -0.0000f, 0.0000f, 0.8381f, 1.2983f,  // Vertex 118
                0.676192f, 1.596666f, -0.026547f, 0.0000f, 0.0000f, -1.0000f, 0.8381f, 1.2983f,  // Vertex 119
                0.506192f, 1.596667f, -0.026547f, -0.0000f, -0.0000f, 1.0000f, 0.7531f, 1.2983f,  // Vertex 120
                -0.523809f, -1.543334f, -0.096548f, -0.0000f, -1.0000f, -0.0000f, 0.2381f, -0.2717f,  // Vertex 121
                -0.523809f, -1.543334f, -0.046548f, 0.0000f, 1.0000f, 0.0000f, 0.2381f, -0.2717f,  // Vertex 122
                -0.353810f, -1.543334f, -0.046548f, -1.0000f, 0.0000f, -0.0000f, 0.3231f, -0.2717f,  // Vertex 123
                -0.353809f, -1.543334f, -0.096548f, 1.0000f, -0.0000f, 0.0000f, 0.3231f, -0.2717f,  // Vertex 124
                -0.523808f, 1.606667f, -0.096547f, 0.0000f, 0.0000f, -1.0000f, 0.2381f, 1.3033f,  // Vertex 125
                -0.353808f, 1.606667f, -0.096547f, -0.0000f, -0.0000f, 1.0000f, 0.3231f, 1.3033f,  // Vertex 126
                -0.353808f, 1.606666f, -0.046547f, -0.0000f, -1.0000f, -0.0000f, 0.3231f, 1.3033f,  // Vertex 127
                -0.523808f, 1.606667f, -0.046547f, 0.0000f, 1.0000f, 0.0000f, 0.2381f, 1.3033f,  // Vertex 128
                -0.343811f, -1.543334f, 0.023452f, -1.0000f, 0.0000f, -0.0000f, 0.3281f, -0.2717f,  // Vertex 129
                -0.343811f, -1.543334f, 0.073452f, 1.0000f, -0.0000f, 0.0000f, 0.3281f, -0.2717f,  // Vertex 130
                -0.173811f, -1.543334f, 0.073452f, 0.0000f, 0.0000f, -1.0000f, 0.4131f, -0.2717f,  // Vertex 131
                -0.173811f, -1.543334f, 0.023452f, -0.0000f, -0.0000f, 1.0000f, 0.4131f, -0.2717f,  // Vertex 132
                -0.343810f, 1.606668f, 0.023453f, 1.0000f, -0.0000f, 0.0000f, 0.3281f, 1.3033f,  // Vertex 133
                -0.173810f, 1.606667f, 0.023453f, -1.0000f, 0.0000f, 0.0000f, 0.4131f, 1.3033f,  // Vertex 134
                -0.173810f, 1.606667f, 0.073453f, -0.0000f, -1.0000f, -0.0000f, 0.4131f, 1.3033f,  // Vertex 135
                -0.343810f, 1.606667f, 0.073453f, 0.0000f, 1.0000f, 0.0000f, 0.3281f, 1.3033f,  // Vertex 136
                -0.173809f, -1.553334f, -0.086548f, 0.0000f, 0.0000f, -1.0000f, 0.4131f, -0.2767f,  // Vertex 137
                -0.173809f, -1.553334f, -0.036548f, -0.0000f, -0.0000f, 1.0000f, 0.4131f, -0.2767f,  // Vertex 138
                -0.003809f, -1.553334f, -0.036548f, 1.0000f, -0.0000f, 0.0000f, 0.4981f, -0.2767f,  // Vertex 139
                -0.003809f, -1.553334f, -0.086548f, -1.0000f, 0.0000f, 0.0000f, 0.4981f, -0.2767f,  // Vertex 140
                -0.173808f, 1.596667f, -0.086547f, -0.0000f, -1.0000f, -0.0000f, 0.4131f, 1.2983f,  // Vertex 141
                -0.003808f, 1.596667f, -0.086547f, 0.0000f, 1.0000f, 0.0000f, 0.4981f, 1.2983f,  // Vertex 142
                -0.003808f, 1.596666f, -0.036547f, 0.0000f, 0.0000f, -1.0000f, 0.4981f, 1.2983f,  // Vertex 143
                -0.173808f, 1.596667f, -0.036547f, -0.0000f, -0.0000f, 1.0000f, 0.4131f, 1.2983f,  // Vertex 144
                0.006189f, -1.563334f, 0.023452f, -0.0000f, -1.0000f, -0.0000f, 0.5031f, -0.2817f,  // Vertex 145
                0.006189f, -1.563334f, 0.073452f, 0.0000f, 1.0000f, 0.0000f, 0.5031f, -0.2817f,  // Vertex 146
                0.176189f, -1.563334f, 0.073452f, -1.0000f, 0.0000f, -0.0000f, 0.5881f, -0.2817f,  // Vertex 147
                0.176189f, -1.563334f, 0.023452f, 1.0000f, -0.0000f, 0.0000f, 0.5881f, -0.2817f,  // Vertex 148
                0.006190f, 1.586667f, 0.023453f, 0.0000f, 0.0000f, -1.0000f, 0.5031f, 1.2933f,  // Vertex 149
                0.176190f, 1.586667f, 0.023453f, -0.0000f, -0.0000f, 1.0000f, 0.5881f, 1.2933f,  // Vertex 150
                0.176190f, 1.586666f, 0.073453f, 1.0000f, -0.0000f, 0.0000f, 0.5881f, 1.2933f,  // Vertex 151
                0.006190f, 1.586667f, 0.073453f, -1.0000f, 0.0000f, 0.0000f, 0.5031f, 1.2933f,  // Vertex 152
                -1.533811f, -1.543334f, -0.066548f, -0.0000f, -1.0000f, -0.0000f, -0.2669f, -0.2717f,  // Vertex 153
                -1.533811f, -1.543334f, -0.016548f, 0.0000f, 1.0000f, 0.0000f, -0.2669f, -0.2717f,  // Vertex 154
                -1.363811f, -1.543334f, -0.016548f, 0.0000f, 0.0000f, -1.0000f, -0.1819f, -0.2717f,  // Vertex 155
                -1.363811f, -1.543334f, -0.066548f, -0.0000f, -0.0000f, 1.0000f, -0.1819f, -0.2717f,  // Vertex 156
                -1.533809f, 1.606668f, -0.066546f, -0.0000f, -1.0000f, -0.0000f, -0.2669f, 1.3033f,  // Vertex 157
                -1.363809f, 1.606667f, -0.066546f, 0.0000f, 1.0000f, 0.0000f, -0.1819f, 1.3033f,  // Vertex 158
                -1.363809f, 1.606666f, -0.016546f, -1.0000f, 0.0000f, -0.0000f, -0.1819f, 1.3033f,  // Vertex 159
                -1.533809f, 1.606667f, -0.016546f, 1.0000f, -0.0000f, 0.0000f, -0.2669f, 1.3033f,  // Vertex 160
                -1.353811f, -1.543334f, 0.023452f, 0.0000f, 0.0000f, -1.0000f, -0.1769f, -0.2717f,  // Vertex 161
                -1.353811f, -1.543334f, 0.073452f, -0.0000f, -0.0000f, 1.0000f, -0.1769f, -0.2717f,  // Vertex 162
                -1.183811f, -1.543334f, 0.073452f, -0.0000f, -1.0000f, -0.0000f, -0.0919f, -0.2717f,  // Vertex 163
                -1.183811f, -1.543334f, 0.023452f, 0.0000f, 1.0000f, 0.0000f, -0.0919f, -0.2717f,  // Vertex 164
                -1.353809f, 1.606667f, 0.023454f, -1.0000f, 0.0000f, -0.0000f, -0.1769f, 1.3033f,  // Vertex 165
                -1.183810f, 1.606667f, 0.023454f, 1.0000f, -0.0000f, 0.0000f, -0.0919f, 1.3033f,  // Vertex 166
                -1.183810f, 1.606666f, 0.073454f, 0.0000f, 0.0000f, -1.0000f, -0.0919f, 1.3033f,  // Vertex 167
                -1.353809f, 1.606666f, 0.073454f, -0.0000f, -0.0000f, 1.0000f, -0.1769f, 1.3033f,  // Vertex 168
        };

        indices = {
            3, 0, 1, 3, 1, 2,  // Face 1
            7, 4, 5, 7, 5, 6,  // Face 2
            1, 0, 4, 1, 4, 7,  // Face 3
            5, 3, 2, 5, 2, 6,  // Face 4
            4, 0, 3, 4, 3, 5,  // Face 5
            2, 1, 7, 2, 7, 6,  // Face 6
            11, 8, 9, 11, 9, 10,  // Face 7
            15, 12, 13, 15, 13, 14,  // Face 8
            9, 8, 12, 9, 12, 15,  // Face 9
            13, 11, 10, 13, 10, 14,  // Face 10
            12, 8, 11, 12, 11, 13,  // Face 11
            10, 9, 15, 10, 15, 14,  // Face 12
            19, 16, 17, 19, 17, 18,  // Face 13
            23, 20, 21, 23, 21, 22,  // Face 14
            17, 16, 20, 17, 20, 23,  // Face 15
            21, 19, 18, 21, 18, 22,  // Face 16
            20, 16, 19, 20, 19, 21,  // Face 17
            18, 17, 23, 18, 23, 22,  // Face 18
            27, 24, 25, 27, 25, 26,  // Face 19
            31, 28, 29, 31, 29, 30,  // Face 20
            25, 24, 28, 25, 28, 31,  // Face 21
            29, 27, 26, 29, 26, 30,  // Face 22
            28, 24, 27, 28, 27, 29,  // Face 23
            26, 25, 31, 26, 31, 30,  // Face 24
            35, 32, 33, 35, 33, 34,  // Face 25
            39, 36, 37, 39, 37, 38,  // Face 26
            33, 32, 36, 33, 36, 39,  // Face 27
            37, 35, 34, 37, 34, 38,  // Face 28
            36, 32, 35, 36, 35, 37,  // Face 29
            34, 33, 39, 34, 39, 38,  // Face 30
            43, 40, 41, 43, 41, 42,  // Face 31
            47, 44, 45, 47, 45, 46,  // Face 32
            41, 40, 44, 41, 44, 47,  // Face 33
            45, 43, 42, 45, 42, 46,  // Face 34
            44, 40, 43, 44, 43, 45,  // Face 35
            42, 41, 47, 42, 47, 46,  // Face 36
            51, 48, 49, 51, 49, 50,  // Face 37
            55, 52, 53, 55, 53, 54,  // Face 38
            49, 48, 52, 49, 52, 55,  // Face 39
            53, 51, 50, 53, 50, 54,  // Face 40
            52, 48, 51, 52, 51, 53,  // Face 41
            50, 49, 55, 50, 55, 54,  // Face 42
            59, 56, 57, 59, 57, 58,  // Face 43
            63, 60, 61, 63, 61, 62,  // Face 44
            57, 56, 60, 57, 60, 63,  // Face 45
            61, 59, 58, 61, 58, 62,  // Face 46
            60, 56, 59, 60, 59, 61,  // Face 47
            58, 57, 63, 58, 63, 62,  // Face 48
            67, 64, 65, 67, 65, 66,  // Face 49
            71, 68, 69, 71, 69, 70,  // Face 50
            65, 64, 68, 65, 68, 71,  // Face 51
            69, 67, 66, 69, 66, 70,  // Face 52
            68, 64, 67, 68, 67, 69,  // Face 53
            66, 65, 71, 66, 71, 70,  // Face 54
            75, 72, 73, 75, 73, 74,  // Face 55
            79, 76, 77, 79, 77, 78,  // Face 56
            73, 72, 76, 73, 76, 79,  // Face 57
            77, 75, 74, 77, 74, 78,  // Face 58
            76, 72, 75, 76, 75, 77,  // Face 59
            74, 73, 79, 74, 79, 78,  // Face 60
            83, 80, 81, 83, 81, 82,  // Face 61
            87, 84, 85, 87, 85, 86,  // Face 62
            81, 80, 84, 81, 84, 87,  // Face 63
            85, 83, 82, 85, 82, 86,  // Face 64
            84, 80, 83, 84, 83, 85,  // Face 65
            82, 81, 87, 82, 87, 86,  // Face 66
            91, 88, 89, 91, 89, 90,  // Face 67
            95, 92, 93, 95, 93, 94,  // Face 68
            89, 88, 92, 89, 92, 95,  // Face 69
            93, 91, 90, 93, 90, 94,  // Face 70
            92, 88, 91, 92, 91, 93,  // Face 71
            90, 89, 95, 90, 95, 94,  // Face 72
            99, 96, 97, 99, 97, 98,  // Face 73
            103, 100, 101, 103, 101, 102,  // Face 74
            97, 96, 100, 97, 100, 103,  // Face 75
            101, 99, 98, 101, 98, 102,  // Face 76
            100, 96, 99, 100, 99, 101,  // Face 77
            98, 97, 103, 98, 103, 102,  // Face 78
            107, 104, 105, 107, 105, 106,  // Face 79
            111, 108, 109, 111, 109, 110,  // Face 80
            105, 104, 108, 105, 108, 111,  // Face 81
            109, 107, 106, 109, 106, 110,  // Face 82
            108, 104, 107, 108, 107, 109,  // Face 83
            106, 105, 111, 106, 111, 110,  // Face 84
            115, 112, 113, 115, 113, 114,  // Face 85
            119, 116, 117, 119, 117, 118,  // Face 86
            113, 112, 116, 113, 116, 119,  // Face 87
            117, 115, 114, 117, 114, 118,  // Face 88
            116, 112, 115, 116, 115, 117,  // Face 89
            114, 113, 119, 114, 119, 118,  // Face 90
            123, 120, 121, 123, 121, 122,  // Face 91
            127, 124, 125, 127, 125, 126,  // Face 92
            121, 120, 124, 121, 124, 127,  // Face 93
            125, 123, 122, 125, 122, 126,  // Face 94
            124, 120, 123, 124, 123, 125,  // Face 95
            122, 121, 127, 122, 127, 126,  // Face 96
            131, 128, 129, 131, 129, 130,  // Face 97
            135, 132, 133, 135, 133, 134,  // Face 98
            129, 128, 132, 129, 132, 135,  // Face 99
            133, 131, 130, 133, 130, 134,  // Face 100
            132, 128, 131, 132, 131, 133,  // Face 101
            130, 129, 135, 130, 135, 134,  // Face 102
            139, 136, 137, 139, 137, 138,  // Face 103
            143, 140, 141, 143, 141, 142,  // Face 104
            137, 136, 140, 137, 140, 143,  // Face 105
            141, 139, 138, 141, 138, 142,  // Face 106
            140, 136, 139, 140, 139, 141,  // Face 107
            138, 137, 143, 138, 143, 142,  // Face 108
            147, 144, 145, 147, 145, 146,  // Face 109
            151, 148, 149, 151, 149, 150,  // Face 110
            145, 144, 148, 145, 148, 151,  // Face 111
            149, 147, 146, 149, 146, 150,  // Face 112
            148, 144, 147, 148, 147, 149,  // Face 113
            146, 145, 151, 146, 151, 150,  // Face 114
            155, 152, 153, 155, 153, 154,  // Face 115
            159, 156, 157, 159, 157, 158,  // Face 116
            153, 152, 156, 153, 156, 159,  // Face 117
            157, 155, 154, 157, 154, 158,  // Face 118
            156, 152, 155, 156, 155, 157,  // Face 119
            154, 153, 159, 154, 159, 158,  // Face 120
            163, 160, 161, 163, 161, 162,  // Face 121
            167, 164, 165, 167, 165, 166,  // Face 122
            161, 160, 164, 161, 164, 167,  // Face 123
            165, 163, 162, 165, 162, 166,  // Face 124
            164, 160, 163, 164, 163, 165,  // Face 125
            162, 161, 167, 162, 167, 166,  // Face 126
        };


        // Generate and bind VAO, VBO, EBO
        glGenVertexArrays(1, &VAO);
        glGenBuffers(1, &VBO);
        glGenBuffers(1, &EBO);

        glBindVertexArray(VAO);

        glBindBuffer(GL_ARRAY_BUFFER, VBO);
        glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(float), vertices.data(), GL_STATIC_DRAW);

        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);
        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), indices.data(), GL_STATIC_DRAW);

        // Position attribute
        glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
        glEnableVertexAttribArray(0);

        // Normal attribute
        glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(3 * sizeof(float)));
        glEnableVertexAttribArray(1);

        // Texture coordinate attribute
        glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(6 * sizeof(float)));
        glEnableVertexAttribArray(2);

        glBindVertexArray(0);
    }
};

#endif /* GLASS_H */
